<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.btb.mapper.EmpMapper" >
  <resultMap id="BaseResultMap" type="com.btb.pojo.Emp" >
    <id column="eid" property="eid" jdbcType="BIGINT" />
    <result column="ename" property="ename" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="TINYINT" />
    <result column="cellphone" property="cellphone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="salary" property="salary" jdbcType="BIGINT" />
    <result column="bonus" property="bonus" jdbcType="BIGINT" />
    <result column="hiredate" property="hiredate" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="gid" property="gid" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    eid, ename, password, gender, cellphone, address, birthday, salary, bonus, hiredate, 
    updated, status, gid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.btb.pojo.EmpExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from emp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from emp
    where eid = #{eid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from emp
    where eid = #{eid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.btb.pojo.EmpExample" >
    delete from emp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.btb.pojo.Emp" >
    <selectKey keyProperty="eid" resultType="Long" order="AFTER"> 
  		SELECT LAST_INSERT_ID()
  	</selectKey>
    insert into emp (eid, ename, password, 
      gender, cellphone, address, 
      birthday, salary, bonus, 
      hiredate, updated, status, 
      gid)
    values (#{eid,jdbcType=BIGINT}, #{ename,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{gender,jdbcType=TINYINT}, #{cellphone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=TIMESTAMP}, #{salary,jdbcType=BIGINT}, #{bonus,jdbcType=BIGINT}, 
      #{hiredate,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{gid,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.btb.pojo.Emp" >
   	<selectKey keyProperty="eid" resultType="Long" order="AFTER"> 
  		SELECT LAST_INSERT_ID()
  	</selectKey>
    insert into emp
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eid != null" >
        eid,
      </if>
      <if test="ename != null" >
        ename,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="cellphone != null" >
        cellphone,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="bonus != null" >
        bonus,
      </if>
      <if test="hiredate != null" >
        hiredate,
      </if>
      <if test="updated != null" >
        updated,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="gid != null" >
        gid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eid != null" >
        #{eid,jdbcType=BIGINT},
      </if>
      <if test="ename != null" >
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="cellphone != null" >
        #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=BIGINT},
      </if>
      <if test="bonus != null" >
        #{bonus,jdbcType=BIGINT},
      </if>
      <if test="hiredate != null" >
        #{hiredate,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="gid != null" >
        #{gid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.btb.pojo.EmpExample" resultType="java.lang.Integer" >
    select count(*) from emp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update emp
    <set >
      <if test="record.eid != null" >
        eid = #{record.eid,jdbcType=BIGINT},
      </if>
      <if test="record.ename != null" >
        ename = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.cellphone != null" >
        cellphone = #{record.cellphone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.salary != null" >
        salary = #{record.salary,jdbcType=BIGINT},
      </if>
      <if test="record.bonus != null" >
        bonus = #{record.bonus,jdbcType=BIGINT},
      </if>
      <if test="record.hiredate != null" >
        hiredate = #{record.hiredate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.gid != null" >
        gid = #{record.gid,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update emp
    set eid = #{record.eid,jdbcType=BIGINT},
      ename = #{record.ename,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      cellphone = #{record.cellphone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      salary = #{record.salary,jdbcType=BIGINT},
      bonus = #{record.bonus,jdbcType=BIGINT},
      hiredate = #{record.hiredate,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      gid = #{record.gid,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.btb.pojo.Emp" >
    update emp
    <set >
      <if test="ename != null" >
        ename = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="cellphone != null" >
        cellphone = #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=BIGINT},
      </if>
      <if test="bonus != null" >
        bonus = #{bonus,jdbcType=BIGINT},
      </if>
      <if test="hiredate != null" >
        hiredate = #{hiredate,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="gid != null" >
        gid = #{gid,jdbcType=BIGINT},
      </if>
    </set>
    where eid = #{eid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.btb.pojo.Emp" >
    update emp
    set ename = #{ename,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      cellphone = #{cellphone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      salary = #{salary,jdbcType=BIGINT},
      bonus = #{bonus,jdbcType=BIGINT},
      hiredate = #{hiredate,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      gid = #{gid,jdbcType=BIGINT}
    where eid = #{eid,jdbcType=BIGINT}
  </update>
</mapper>